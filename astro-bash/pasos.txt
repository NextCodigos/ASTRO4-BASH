❯ npm create astro@latest

 astro   Launch sequence initiated.

   dir   Where should we create your new project?
         ./astro-bash

  tmpl   How would you like to start your new project?
         Empty

    ts   Do you plan to write TypeScript?
         No
      ◼  No worries! TypeScript is supported in Astro by default,
         but you are free to continue writing JavaScript instead.

  deps   Install dependencies?
         Yes

   git   Initialize a new git repository?
         No
      ◼  Sounds good! You can always run git init manually.

      ✔  Project initialized!
         ■ Template copied
         ■ Dependencies installed

  next   Liftoff confirmed. Explore your project!

         Enter your project directory using cd ./astro-bash 
         Run npm run dev to start the dev server. CTRL+C to stop.
         Add frameworks like react or tailwind using astro add.

         Stuck? Join us at https://astro.build/chat

╭─────╮  Houston:
│ ◠ ◡ ◠  Good luck out there, astronaut! 🚀
╰─────╯
❯ lsd
 astro-bas



////////////////////////////////////////////

Ver carpetas dentro de src en terminal linux:

❯ tree src
src
├── env.d.ts
└── pages
    └── index.astro

1 directory, 2 files

  ╱  ~/M/F/Astro4-bash/astro-bash ╱ on   NextCodigos ?1        ✔ 


////////////////////////////////////////////
////////////////////////////////////////////

En carpeta public tendremos imagenes y videos para la aplicacion.


////////////////////////////////////////////
////////////////////////////////////////////

Creando componentes:
Dentro de src creamos carpeta componets.

CREO PRIMER COMPONENTE ASTRO;

index.astro:

---
import Post from "../components/Post.astro"
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Astro</title>
	</head>
	<body>
		<h1>Astro</h1>
		<Post/>
	</body>
</html>


components componente astro:
Post.astro:

---

---

<article>
  <img
    src="https://images.pexels.com/photos/40185/mac-freelancer-macintosh-macbook-40185.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1"
    alt=""
    class="rounded"
  />
  <h2>The Post Title</h2>
  <p>A post description</p>
  <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Eligendi necessitatibus ducimus corporis ut distinctio obcaecati voluptatem optio reiciendis, nulla reprehenderit perspiciatis qui tempora fuga, magni possimus quae officiis quaerat. Incidunt.</p>
  <p>10/12/2023 - 16 min read</p>
</article>



////////////////////////////////////////////
////////////////////////////////////////////

❯ npx astro add tailwind
✔ Resolving packages...
16:58:53 
  Astro will run the following command:
  If you skip this step, you can always run it yourself later

 ╭──────────────────────────────────────────────────────────╮
 │ npm install @astrojs/tailwind@^5.1.0 tailwindcss@^3.4.1  │
 ╰──────────────────────────────────────────────────────────╯

✔ Continue? … yes
✔ Installing dependencies...
16:59:30 
  Astro will generate a minimal ./tailwind.config.mjs file.

✔ Continue? … yes
16:59:34 
  Astro will make the following changes to your config file:

 ╭ astro.config.mjs ─────────────────────────────╮
 │ import { defineConfig } from 'astro/config';  │
 │                                               │
 │ import tailwind from "@astrojs/tailwind";     │
 │                                               │
 │ // https://astro.build/config                 │
 │ export default defineConfig({                 │
 │   integrations: [tailwind()]                  │
 │ });                                           │
 ╰───────────────────────────────────────────────╯

✔ Continue? … yes
16:59:37   
   success  Added the following integration to your project:
  - @astrojs/tailwind

  ╱  ~/E/ASTRO4-bueno2/stellar-sphere ╱ on   NextCodigos !3 ?1          




////////////////////////////////////////////
////////////////////////////////////////////

Estilos a componente con tailwind,
no son reutilizables la informacion de los componentes:

Post.astro:

---

---

<article id="article" class="flex max-w-sm flex-col gap-2 rounded bg-[#1F2937] px-5 py-6 text-white">
  <img src="https://images.pexels.com/photos/67112/pexels-photo-67112.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1" class="rounded" />
  <h2 class="text-2xl font-bold">The Post Title</h2>
  <p>A post description</p>
  <p class="text-zinc-300">Lorem ipsum dolor sit, amet consectetur adipisicing elit. Neque eius distinctio aspernatur incidunt, tempore expedita architecto est, sint natus, nihil quaerat nisi. Saepe pariatur nihil fugit itaque esse doloribus corporis!</p>
  <p class="text-zinc-300">10/12/2023 - 16 min read</p>
</article>

Creamos varios componentes del post imagen y texto:

///

index.astro:

---
import Post from "../components/Post.astro"
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Astro</title>
	</head>
	<body>
		<h1>Astro</h1>
		<Post/>
		<Post/>
		<Post/>
		<Post/>
	</body>
</html>



////////////////////////////////////////////
////////////////////////////////////////////

Los props en los componentyes son como los parametros
 de una funcion, hacen reutilizables:


index.astro:

---
import Post from "../components/Post.astro"
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Astro</title>
	</head>
	<body>
		<h1>Astro</h1>
		<!-- Pasamos props al componente -->
		<!-- Unas llaves para javascript componente astro y otras para objeto -->
		<Post post={{
			title: "My super coool title",
			description: "My super cool description"
		}}/>
		<Post post={{
			title: "My super coool title 2",
			description: "My super cool description 2"
		}}/>
		<Post post={{
			title: "My super coool title 3",
			description: "My super cool description 3"
		}}/>
		<Post post={{
			title: "My super coool title 4",
			description: "My super cool description 4"
		}}/>
		
	</body>
</html>



Post.astro:

---
const {
  post: { title, description },
} = Astro.props;
---

<article
  id="article"
  class="flex max-w-sm flex-col gap-2 rounded bg-[#1F2937] px-5 py-6 text-white"
>
  <img
    src="https://images.pexels.com/photos/67112/pexels-photo-67112.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1"
    class="rounded"
  />

  <h2 class="text-2xl font-bold">{title}</h2>
  <p>{description}</p>

  <p class="text-zinc-300">
    Lorem ipsum dolor sit, amet consectetur adipisicing elit. Neque eius
    distinctio aspernatur incidunt, tempore expedita architecto est, sint natus,
    nihil quaerat nisi. Saepe pariatur nihil fugit itaque esse doloribus
    corporis!
  </p>
  <p class="text-zinc-300">10/12/2023 - 16 min read</p>
</article>

<!-- Los props son como los argumentos de una funcion es lo que los hace reutiliables con diferentes fotos y contenidos -->


////////////////////////////////////////////
////////////////////////////////////////////



Para simular base de datos:

npm install -g json-server

// Objeto de prueba para simular los post

db.json:

{
    "posts": [
        {
            "id": 1,
            "title": "The Benefits of Mindfulness Meditation",
            "description": "Exploring the transformative effects of mindfulness meditation.",
            "content": "Mindfulness meditation is a powerful practice that can enhance your mental and emotional well-being. By cultivating mindfulness, you can reduce stress, improve focus, and develop a deeper sense of self-awareness.\n\nIn mindfulness meditation, you simply observe your thoughts and feelings without judgment. It's about being present in the moment and acknowledging your experiences with acceptance and compassion.\n\nStudies have shown that regular mindfulness meditation can lead to reduced anxiety, increased resilience, and a greater sense of inner peace. So, if you're looking to improve your mental health, consider incorporating mindfulness meditation into your daily routine.\n\n# How to Get Started\n\n1. Find a quiet and comfortable space to sit or lie down.\n2. Close your eyes and take a few deep breaths to center yourself.\n3. Focus your attention on your breath or a specific point of awareness.\n4. When your mind wanders, gently bring it back to your chosen point of focus.\n5. Practice regularly for best results.\n\nRemember, mindfulness is a skill that takes time to develop, so be patient with yourself as you embark on this transformative journey.",
            "author": "mindfulnessguide",
            "created_at": "2023-01-15T09:30:00Z"
        },
        {
            "id": 2,
            "title": "Exploring the World of Astrophysics",
            "description": "A journey into the mysteries of the universe.",
            "content": "Astrophysics is a captivating field that delves into the fundamental questions about the cosmos. From the birth of stars to the existence of black holes, astrophysicists seek to unravel the mysteries of the universe.\n\nOne of the most intriguing topics in astrophysics is the search for extraterrestrial life. Scientists are exploring distant planets and moons, searching for signs of habitability and the potential for life beyond Earth.\n\nRecent discoveries, such as exoplanets in the habitable zone and the detection of organic molecules in space, have fueled excitement about the possibility of life elsewhere in the universe.\n\n# The Universe's Grand Design\n\nAstrophysicists also study the structure and evolution of galaxies, the nature of dark matter and dark energy, and the cosmic microwave background radiation. These investigations provide insights into the universe's past, present, and future.\n\nWhether you're an astronomy enthusiast or simply curious about the cosmos, astrophysics offers a fascinating glimpse into the mysteries of space and time.",
            "author": "astrophysicist",
            "created_at": "2023-02-20T11:45:00Z"
        },
        {
            "id": 3,
            "title": "The Art of Culinary Creativity",
            "description": "Unlocking your inner chef and exploring culinary innovation.",
            "content": "Cooking is more than just following recipes; it's an art form that allows you to express your creativity in the kitchen. Whether you're a seasoned chef or a home cook, there's always room for culinary experimentation.\n\n# Flavor Pairing\n\nOne way to unleash your culinary creativity is through flavor pairing. Experiment with unexpected combinations of ingredients to create unique and delightful dishes. The fusion of sweet and savory, spicy and tangy, can lead to exciting culinary discoveries.\n\n# Presentation Matters\n\nThe presentation of a dish can elevate your culinary creations to a whole new level. Pay attention to plating techniques, use colorful garnishes, and consider the visual appeal of your meals. A beautifully presented dish is a feast for the eyes.\n\n# Global Inspiration\n\nExplore cuisines from around the world for inspiration. Try your hand at recreating dishes from different cultures. Learn about the use of spices, herbs, and cooking techniques that are unique to various regions.\n\n# Embrace Mistakes\n\nDon't be afraid to make mistakes in the kitchen. Some of the greatest culinary inventions happened by accident. Embrace the learning process and use failures as stepping stones to culinary excellence.\n\n# Share Your Creations\n\nShare your culinary creations with friends and family. Host dinner parties or potlucks to showcase your innovative dishes. Feedback and appreciation from others can be a great source of motivation.\n\nCulinary creativity knows no bounds, and the kitchen is your canvas. So, put on your chef's hat, grab your apron, and start experimenting with flavors, textures, and presentation to create culinary masterpieces that reflect your unique style.",
            "author": "culinaryartist",
            "created_at": "2023-03-10T14:30:00Z"
        },
        {
            "id": 4,
            "title": "The Future of Sustainable Transportation",
            "description": "Exploring eco-friendly innovations in the world of transportation.",
            "content": "The world of transportation is undergoing a green revolution, with a focus on sustainability and reducing carbon emissions. From electric vehicles (EVs) to public transit improvements, there are numerous innovations shaping the future of transportation.\n\n# Electric Vehicles (EVs)\n\nEVs have gained popularity as a clean and efficient mode of transportation. Advancements in battery technology have increased the range and affordability of electric cars. The transition to EVs is a significant step toward reducing greenhouse gas emissions.\n\n# Public Transit Upgrades\n\nCities around the world are investing in public transit upgrades, including electric buses, expanded metro networks, and bike-sharing programs. These improvements aim to reduce traffic congestion and promote eco-friendly commuting options.\n\n# Sustainable Infrastructure\n\nInfrastructure plays a crucial role in sustainable transportation. The development of dedicated bike lanes, pedestrian-friendly streets, and charging stations for EVs encourages environmentally conscious travel.\n\n# Carpooling and Ride-Sharing\n\nCarpooling and ride-sharing services are contributing to reduced traffic and emissions. By sharing rides, individuals can reduce their carbon footprint and save on transportation costs.\n\n# Autonomous Vehicles\n\nThe future also holds the promise of autonomous vehicles. Self-driving cars can optimize traffic flow, reduce accidents, and improve fuel efficiency.\n\n# Conclusion\n\nThe future of transportation is green and sustainable. As technology advances and society prioritizes eco-friendly options, we can look forward to a cleaner and more efficient way of getting around. Embrace these innovations and play your part in reducing environmental impact.",
            "author": "ecotransportation",
            "created_at": "2023-04-20T10:15:00Z"
        },
        {
            "id": 5,
            "title": "Exploring the Art of Photography",
            "description": "A journey through the lens, capturing moments in time.",
            "content": "Photography is a powerful medium for capturing and preserving moments in time. Whether you're an amateur with a smartphone or a professional with high-end equipment, the art of photography offers endless creative possibilities.\n\n# The Magic of Composition\n\nComposition is a fundamental aspect of photography. Explore techniques such as the rule of thirds, leading lines, and framing to create visually stunning images. Experiment with angles and perspectives to convey unique stories.\n\n# Light and Shadows\n\nUnderstanding light is key to photography. Play with natural and artificial light sources to create dramatic effects. Embrace shadows and highlights to add depth and texture to your photos.\n\n# Storytelling through Images\n\nPhotography is a storytelling medium. Use your camera to capture moments, emotions, and narratives. From street photography to portraits, each image tells a story waiting to be shared.\n\n# Post-Processing and Editing\n\nEditing is an integral part of modern photography. Use software like Adobe Lightroom or mobile apps to enhance your photos, adjust colors, and fine-tune details. Remember that editing should enhance, not distort, the reality of your images.\n\n# Continuous Learning\n\nPhotography is a lifelong learning journey. Stay curious, experiment with new techniques, and seek inspiration from fellow photographers. Join photography communities, attend workshops, and explore different genres.\n\n# Conclusion\n\nPhotography is an art form that allows you to see the world through a unique perspective. Whether you're capturing landscapes, portraits, or everyday moments, embrace the joy of photography and share your visual stories with the world.",
            "author": "photographyenthusiast",
            "created_at": "2023-05-18T14:45:00Z"
        },
        {
            "id": 6,
            "title": "The Power of Positive Thinking",
            "description": "Harnessing the mindset for personal growth and happiness.",
            "content": "Positive thinking is a mindset that can transform your life for the better. It's the belief that your thoughts and attitude have a direct impact on your experiences and outcomes. By cultivating a positive mindset, you can improve your mental well-being and achieve greater happiness and success.\n\n# The Benefits of Positivity\n\nPositive thinking has numerous benefits, including reduced stress, increased resilience, and enhanced overall well-being. It can improve your relationships, boost your self-esteem, and increase your motivation to pursue your goals.\n\n# Strategies for Positive Thinking\n\n1. Practice gratitude: Start each day by acknowledging the things you're grateful for. Keep a gratitude journal to track positive moments in your life.\n2. Challenge negative thoughts: When negative thoughts arise, challenge them with positive affirmations and realistic perspectives.\n3. Surround yourself with positivity: Spend time with people who uplift and support you. Avoid toxic relationships and environments.\n4. Set achievable goals: Break down your goals into smaller, manageable steps. Celebrate your progress along the way.\n5. Mindfulness and meditation: Practice mindfulness to stay present and reduce anxiety. Meditation can help calm your mind and promote positivity.\n\n# Overcoming Challenges\n\nPositive thinking doesn't mean ignoring challenges or difficulties. It's about approaching them with a constructive mindset. When facing adversity, focus on solutions, resilience, and personal growth.\n\n# Conclusion\n\nPositive thinking is a powerful tool for personal growth and happiness. Embrace this mindset, and you'll find that even in challenging times, you have the strength and resilience to overcome obstacles and create a more fulfilling life.",
            "author": "positivitychampion",
            "created_at": "2023-06-10T11:20:00Z"
        },
        {
            "id": 7,
            "title": "The Future of Work: Remote and Hybrid Models",
            "description": "Exploring the evolving landscape of work in a digital age.",
            "content": "The world of work is undergoing a significant transformation, driven by advances in technology and changing attitudes toward remote and hybrid work models. As we move forward, the way we work is likely to look different from traditional office-based settings.\n\n# Rise of Remote Work\n\nRemote work has become more prevalent than ever before. With the advent of digital communication tools and flexible work arrangements, many employees now have the option to work from anywhere. This shift offers benefits such as reduced commute times, improved work-life balance, and access to a global talent pool.\n\n# The Hybrid Work Model\n\nThe hybrid work model blends remote and in-office work. It allows employees to choose where they work based on their preferences and the nature of their tasks. Hybrid models offer flexibility and the opportunity for face-to-face collaboration when needed.\n\n# Challenges and Opportunities\n\nWhile remote and hybrid work models provide many advantages, they also come with challenges. Employers must adapt to managing remote teams effectively, ensuring cybersecurity, and maintaining company culture. Employees need to manage their time, stay motivated, and maintain work-life boundaries.\n\n# The Future Workplace\n\nThe future of work will likely involve a mix of remote, hybrid, and on-site work options. Employers and employees will need to adapt to these changes and embrace new ways of collaborating and staying productive.\n\n# Conclusion\n\nThe future of work is evolving rapidly. Embrace the opportunities presented by remote and hybrid work models while addressing the challenges. By doing so, you can shape a future workplace that aligns with your goals and values.",
            "author": "futureofwork",
            "created_at": "2023-07-25T15:10:00Z"
        },
        {
            "id": 8,
            "title": "The Art of Storytelling in Marketing",
            "description": "How compelling narratives drive successful marketing campaigns.",
            "content": "Storytelling is a powerful tool in marketing that can captivate audiences and leave a lasting impression. When brands effectively tell their stories, they create a connection with customers, build trust, and drive engagement.\n\n# The Impact of Storytelling\n\nStories have the power to evoke emotions, and emotions drive decision-making. A well-crafted narrative can make a brand more relatable and memorable, setting it apart from competitors.\n\n# Elements of Effective Marketing Stories\n\n1. Relatability: Customers should be able to see themselves in the story. Relatable characters and situations make the story more engaging.\n2. Conflict and resolution: Stories often involve challenges or conflicts that are resolved, creating a satisfying narrative arc.\n3. Authenticity: Authentic stories resonate with audiences. Be honest and transparent in your storytelling.\n4. Visual storytelling: Incorporate visual elements like images and videos to enhance the storytelling experience.\n\n# Storytelling Across Platforms\n\nEffective storytelling can be applied across various marketing channels, including social media, websites, email marketing, and advertising. Tailor your stories to fit the platform and audience.\n\n# Measuring Impact\n\nMeasuring the impact of storytelling in marketing can be challenging, but it's essential. Monitor metrics like engagement rates, brand sentiment, and conversion rates to gauge the effectiveness of your storytelling efforts.\n\n# Conclusion\n\nThe art of storytelling in marketing is about connecting with your audience on a human level. Craft compelling narratives that resonate with your customers and watch as your brand gains recognition and loyalty.",
            "author": "marketingstoryteller",
            "created_at": "2023-08-12T09:45:00Z"
        }
    ]
}


////////////////////////////////////////////
////////////////////////////////////////////

Arrancar la base datos prueba json:

❯ json-server --watch db.json
--watch/-w can be omitted, JSON Server 1+ watches for file changes by default
JSON Server started on PORT :3000
Press CTRL-C to stop
Watching db.json...

(˶ᵔ ᵕ ᵔ˶)

Index:
http://localhost:3000/

Static files:
Serving ./public directory if it exists

Endpoints:
http://localhost:3000/posts




////////////////////////////////////////////
////////////////////////////////////////////

Empezamos a vincular con fetch a 
Endpoints:
http://localhost:3000/posts
Podemos utilizar await fuera de una funcion asincrona:

index.astro:

---
import Post from "../components/Post.astro";
const response = await fetch("http://localhost:3000/posts");
const posts = await response.json();
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Astro</title>
  </head>
  <body>
    <h1 class="text-center text-3xl font-bold mb-6 mt-3">Mis posts</h1>
    <div
      class="grid max-w-7xl mx-auto w-full justify-center justify-items-center items-center gap-4 px-2 sm:grid:cols-2 lg:grid-cols-3"
    >
      {posts.map((post) => <Post post={post} />)}
    </div>
  </body>
</html>




////////////////////////////////////////////
////////////////////////////////////////////

Post.astro:

---
const {
  post: { title, description,content,created_at },
} = Astro.props;
---

<article
  id="article"
  class="flex max-w-sm flex-col gap-2 rounded bg-[#1F2937] px-5 py-6 text-white"
>
  <img
    src="https://images.pexels.com/photos/67112/pexels-photo-67112.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1"
    class="rounded"
  />

  <h2 class="text-2xl font-bold">{title}</h2>
  <p>{description}</p>

  <p class="text-zinc-300">
    {content.slice(0, 100) + "..."}
  </p>
  <p class="text-zinc-300">{new Date(created_at).toLocaleDateString()} - 16 min read</p>
</article>

<!-- Los props son como los argumentos de una funcion es lo que los hace reutiliables con diferentes fotos y contenidos -->


Minuto 29:54 
video: 
Astro 4.0: Tu Nuevo Framework De JavaScript Favorito

Canal:￼
Manu Martín

////////////////////////////////////////////
////////////////////////////////////////////

Iniciar base de datos:
json-server --watch db.json
Iniciar aplicacion Astro:
npm run dev




////////////////////////////////////////////
////////////////////////////////////////////


LAYOUTS:
slot sin poder reutilizar el nombre sin parametros:
modifico index.astro:

---
import Post from "../components/Post.astro";
const response = await fetch("http://localhost:3000/posts");
const posts = await response.json();
import DefaultLayout from "../layouts/DefaultLayout.astro";
---

<DefaultLayout>
  <h1 class="text-center text-3xl font-bold mb-6 mt-3">Mis posts</h1>
  <div
    class="grid max-w-7xl mx-auto w-full justify-center justify-items-center items-center gap-4 px-2 sm:grid:cols-2 lg:grid-cols-3"
  >
    {posts.map((post) => <Post post={post} />)}
  </div>
</DefaultLayout>

CREO carpeta layouts con archivo DefaultLayout.astro:

<html>
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Astro</title>
  </head>
  <body>
    <main>
      <nav class="bg-white border-gray-200 dark:bg-gray-900">
        <div
          class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4"
        >
          <a
            href="https://flowbite.com/"
            class="flex items-center space-x-3 rtl:space-x-reverse"
          >
            <img
              src="https://flowbite.com/docs/images/logo.svg"
              class="h-8"
              alt="Flowbite Logo"
            />
            <span
              class="self-center text-2xl font-semibold whitespace-nowrap dark:text-white"
              >Flowbite</span
            >
          </a>
          <button
            data-collapse-toggle="navbar-default"
            type="button"
            class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600"
            aria-controls="navbar-default"
            aria-expanded="false"
          >
            <span class="sr-only">Open main menu</span>
            <svg
              class="w-5 h-5"
              aria-hidden="true"
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 17 14"
            >
              <path
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M1 1h15M1 7h15M1 13h15"></path>
            </svg>
          </button>
          <div class="hidden w-full md:block md:w-auto" id="navbar-default">
            <ul
              class="font-medium flex flex-col p-4 md:p-0 mt-4 border border-gray-100 rounded-lg bg-gray-50 md:flex-row md:space-x-8 rtl:space-x-reverse md:mt-0 md:border-0 md:bg-white dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700"
            >
              <li>
                <a
                  href="#"
                  class="block py-2 px-3 text-white bg-blue-700 rounded md:bg-transparent md:text-blue-700 md:p-0 dark:text-white md:dark:text-blue-500"
                  aria-current="page">Home</a
                >
              </li>
              <li>
                <a
                  href="#"
                  class="block py-2 px-3 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent"
                  >About</a
                >
              </li>
              <li>
                <a
                  href="#"
                  class="block py-2 px-3 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent"
                  >Services</a
                >
              </li>
              <li>
                <a
                  href="#"
                  class="block py-2 px-3 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent"
                  >Pricing</a
                >
              </li>
              <li>
                <a
                  href="#"
                  class="block py-2 px-3 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent"
                  >Contact</a
                >
              </li>
            </ul>
          </div>
        </div>
      </nav>
      <!-- Para que se vean las cards -->
      <slot />
    </main>
  </body>
</html>




////////////////////////////////////////////
////////////////////////////////////////////


slot reutilizar el nombre con parametros:

index.astro

---
import Post from "../components/Post.astro";
const response = await fetch("http://localhost:3000/posts");
const posts = await response.json();
import DefaultLayout from "../layouts/DefaultLayout.astro";
---


	<DefaultLayout>
	<meta slot="header" charset="utf-8" />
    <link slot="header" rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta slot="header" name="viewport" content="width=device-width" />
    <meta slot="header" name="generator" content={Astro.generator} />
    <title slot="header">Ny Astro APP</title>

	<h1 class="text-center text-3xl font-bold mb-6 mt-3">Mis posts</h1>
	<div
		class="grid max-w-7xl mx-auto w-full justify-center justify-items-center items-center gap-4 px-2 sm:grid:cols-2 lg:grid-cols-3"
	>
		{posts.map((post) => <Post post={post} />)}
	</div>
	</DefaultLayout>

Creo carpeta layouts dentro de src y dentro archivo 

DefaultLayout.astro:
<html lang="en">
  <head>
    <!-- Para utilzar head con diferentes nombres -->
    <slot name="header"/>
  </head>
  <body>
    <main>
      <nav class="bg-white border-gray-200 dark:bg-gray-900">
        <div
          class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4"
        >
          <a
            href="https://flowbite.com/"
            class="flex items-center space-x-3 rtl:space-x-reverse"
          >
            <img
              src="https://flowbite.com/docs/images/logo.svg"
              class="h-8"
              alt="Flowbite Logo"
            />
            <span
              class="self-center text-2xl font-semibold whitespace-nowrap dark:text-white"
              >Flowbite</span
            >
          </a>
          <button
            data-collapse-toggle="navbar-default"
            type="button"
            class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600"
            aria-controls="navbar-default"
            aria-expanded="false"
          >
            <span class="sr-only">Open main menu</span>
            <svg
              class="w-5 h-5"
              aria-hidden="true"
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 17 14"
            >
              <path
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M1 1h15M1 7h15M1 13h15"></path>
            </svg>
          </button>
          <div class="hidden w-full md:block md:w-auto" id="navbar-default">
            <ul
              class="font-medium flex flex-col p-4 md:p-0 mt-4 border border-gray-100 rounded-lg bg-gray-50 md:flex-row md:space-x-8 rtl:space-x-reverse md:mt-0 md:border-0 md:bg-white dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700"
            >
              <li>
                <a
                  href="#"
                  class="block py-2 px-3 text-white bg-blue-700 rounded md:bg-transparent md:text-blue-700 md:p-0 dark:text-white md:dark:text-blue-500"
                  aria-current="page">Home</a
                >
              </li>
              <li>
                <a
                  href="#"
                  class="block py-2 px-3 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent"
                  >About</a
                >
              </li>
              <li>
                <a
                  href="#"
                  class="block py-2 px-3 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent"
                  >Services</a
                >
              </li>
              <li>
                <a
                  href="#"
                  class="block py-2 px-3 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent"
                  >Pricing</a
                >
              </li>
              <li>
                <a
                  href="#"
                  class="block py-2 px-3 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent"
                  >Contact</a
                >
              </li>
            </ul>
          </div>
        </div>
      </nav>
      <slot />
    </main>
  </body>
</html>

minuto 39


////////////////////////////////////////////
////////////////////////////////////////////

DefaultLayout.astro:

<html lang="en">
  <head>
    <!-- Para utilzar head con diferentes nombres ,sino pongo en otras paginas toma este title por defecto-->
    <slot name="header">
      <meta slot="header" charset="utf-8" />
      <link slot="header" rel="icon" type="image/svg+xml" href="/favicon.svg" />
      <meta slot="header" name="viewport" content="width=device-width" />
      <meta slot="header" name="generator" content={Astro.generator} />
      <title slot="header">Astro</title>
    </slot>
  </head>
  <body>
    <main>
      <nav class="bg-white border-gray-200 dark:bg-gray-900">
        <div
          class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4"
        >
          <a
            href="https://flowbite.com/"
            class="flex items-center space-x-3 rtl:space-x-reverse"
          >
            <img
              src="https://flowbite.com/docs/images/logo.svg"
              class="h-8"
              alt="Flowbite Logo"
            />
            <span
              class="self-center text-2xl font-semibold whitespace-nowrap dark:text-white"
              >Flowbite</span
            >
          </a>
          <button
            data-collapse-toggle="navbar-default"
            type="button"
            class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600"
            aria-controls="navbar-default"
            aria-expanded="false"
          >
            <span class="sr-only">Open main menu</span>
            <svg
              class="w-5 h-5"
              aria-hidden="true"
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 17 14"
            >
              <path
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M1 1h15M1 7h15M1 13h15"></path>
            </svg>
          </button>
          <div class="hidden w-full md:block md:w-auto" id="navbar-default">
            <ul
              class="font-medium flex flex-col p-4 md:p-0 mt-4 border border-gray-100 rounded-lg bg-gray-50 md:flex-row md:space-x-8 rtl:space-x-reverse md:mt-0 md:border-0 md:bg-white dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700"
            >
              <li>
                <a
                  href="#"
                  class="block py-2 px-3 text-white bg-blue-700 rounded md:bg-transparent md:text-blue-700 md:p-0 dark:text-white md:dark:text-blue-500"
                  aria-current="page">Home</a
                >
              </li>
              <li>
                <a
                  href="#"
                  class="block py-2 px-3 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent"
                  >About</a
                >
              </li>
              <li>
                <a
                  href="#"
                  class="block py-2 px-3 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent"
                  >Services</a
                >
              </li>
              <li>
                <a
                  href="#"
                  class="block py-2 px-3 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent"
                  >Pricing</a
                >
              </li>
              <li>
                <a
                  href="#"
                  class="block py-2 px-3 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent"
                  >Contact</a
                >
              </li>
            </ul>
          </div>
        </div>
      </nav>
      <slot />
    </main>
  </body>
</html>


index.astro:

---
import Post from "../components/Post.astro";
const response = await fetch("http://localhost:3000/posts");
const posts = await response.json();
import DefaultLayout from "../layouts/DefaultLayout.astro";
---


	<DefaultLayout>
	<!-- SI NO pongo contenido pone por defecto el title de DeafultLayout.astro -->
	<meta slot="header" charset="utf-8" />
    <link slot="header" rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta slot="header" name="viewport" content="width=device-width" />
    <meta slot="header" name="generator" content={Astro.generator} />
    <title slot="header">Ny Astro APP</title>

	<h1 class="text-center text-3xl font-bold mb-6 mt-3">Mis posts</h1>
	<div
		class="grid max-w-7xl mx-auto w-full justify-center justify-items-center items-center gap-4 px-2 sm:grid:cols-2 lg:grid-cols-3"
	>
		{posts.map((post) => <Post post={post} />)}
	</div>
	</DefaultLayout>

Si no pongo en inde.astro title toma por defecto de DeafultLayout.astro

minuto 40:49



////////////////////////////////////////////
////////////////////////////////////////////

Creamos pagina about.astro:

---
import DefaultLayout from "../layouts/DefaultLayout.astro";
// import { Button } from "../components/Button";
---

<DefaultLayout>
  <h1>Bienvenido a mi página About!</h1>
  <!-- <Button client:visible /> -->
</DefaultLayout>






////////////////////////////////////////////
////////////////////////////////////////////

creo pagina error 404 copiada de astro:

---
import DefaultLayout from "../layouts/DefaultLayout.astro";
---

<DefaultLayout>
  <div
    class="flex flex-col items-center justify-center min-h-screen bg-gray-100"
  >
    <svg
      class="astro-icon w-24 h-24 text-purple-600 mb-8"
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 64 80"
      fill="none"
    >
      <path
        d="M20.5253 67.6322C16.9291 64.3531 15.8793 57.4632 17.3776 52.4717C19.9755 55.6188 23.575 56.6157 27.3035 57.1784C33.0594 58.0468 38.7122 57.722 44.0592 55.0977C44.6709 54.7972 45.2362 54.3978 45.9045 53.9931C46.4062 55.4451 46.5368 56.9109 46.3616 58.4028C45.9355 62.0362 44.1228 64.8429 41.2397 66.9705C40.0868 67.8215 38.8669 68.5822 37.6762 69.3846C34.0181 71.8508 33.0285 74.7426 34.403 78.9491C34.4357 79.0516 34.4649 79.1541 34.5388 79.4042C32.6711 78.5705 31.3069 77.3565 30.2674 75.7604C29.1694 74.0757 28.6471 72.2121 28.6196 70.1957C28.6059 69.2144 28.6059 68.2244 28.4736 67.257C28.1506 64.8985 27.0406 63.8425 24.9496 63.7817C22.8036 63.7192 21.106 65.0426 20.6559 67.1268C20.6215 67.2865 20.5717 67.4446 20.5218 67.6304L20.5253 67.6322Z"
        fill="white"></path>
      <path
        d="M20.5253 67.6322C16.9291 64.3531 15.8793 57.4632 17.3776 52.4717C19.9755 55.6188 23.575 56.6157 27.3035 57.1784C33.0594 58.0468 38.7122 57.722 44.0592 55.0977C44.6709 54.7972 45.2362 54.3978 45.9045 53.9931C46.4062 55.4451 46.5368 56.9109 46.3616 58.4028C45.9355 62.0362 44.1228 64.8429 41.2397 66.9705C40.0868 67.8215 38.8669 68.5822 37.6762 69.3846C34.0181 71.8508 33.0285 74.7426 34.403 78.9491C34.4357 79.0516 34.4649 79.1541 34.5388 79.4042C32.6711 78.5705 31.3069 77.3565 30.2674 75.7604C29.1694 74.0757 28.6471 72.2121 28.6196 70.1957C28.6059 69.2144 28.6059 68.2244 28.4736 67.257C28.1506 64.8985 27.0406 63.8425 24.9496 63.7817C22.8036 63.7192 21.106 65.0426 20.6559 67.1268C20.6215 67.2865 20.5717 67.4446 20.5218 67.6304L20.5253 67.6322Z"
        fill="url(#paint0_linear_738_686)"></path>
      <path
        d="M0 51.6401C0 51.6401 10.6488 46.4654 21.3274 46.4654L29.3786 21.6102C29.6801 20.4082 30.5602 19.5913 31.5538 19.5913C32.5474 19.5913 33.4275 20.4082 33.7289 21.6102L41.7802 46.4654C54.4274 46.4654 63.1076 51.6401 63.1076 51.6401C63.1076 51.6401 45.0197 2.48776 44.9843 2.38914C44.4652 0.935933 43.5888 0 42.4073 0H20.7022C19.5206 0 18.6796 0.935933 18.1251 2.38914C18.086 2.4859 0 51.6401 0 51.6401Z"
        fill="white"></path>
      <defs>
        <linearGradient
          id="paint0_linear_738_686"
          x1="31.554"
          y1="75.4423"
          x2="39.7462"
          y2="48.376"
          gradientUnits="userSpaceOnUse"
        >
          <stop stop-color="#D83333"></stop>
          <stop offset="1" stop-color="#F041FF"></stop>
        </linearGradient>
      </defs>
    </svg>
    <h1 class="text-3xl font-bold text-gray-800 mb-4">
      <span class="statusCode text-red-600">404:</span>
      <span class="statusMessage">No encontrado</span>
    </h1>

    <p class="text-lg text-gray-600">
      Lo siento, la página que buscas no existe.
    </p>
    <pre class="text-sm text-gray-500 mt-2">Ruta: /dfdf</pre>
  </div>
</DefaultLayout>




////////////////////////////////////////////
////////////////////////////////////////////

Añado volver a home pulsando boton desde about:

DefaultLayout.astro:

<html lang="en">
  <head>
    <!-- Para utilzar head con diferentes nombres ,sino pongo en otras paginas toma este title por defecto-->
    <slot name="header">
      <meta slot="header" charset="utf-8" />
      <link slot="header" rel="icon" type="image/svg+xml" href="/favicon.svg" />
      <meta slot="header" name="viewport" content="width=device-width" />
      <meta slot="header" name="generator" content={Astro.generator} />
      <title slot="header">Astro</title>
    </slot>
  </head>
  <body>
    <main>
      <nav class="bg-white border-gray-200 dark:bg-gray-900">
        <div
          class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4"
        >
          <a
            href="https://flowbite.com/"
            class="flex items-center space-x-3 rtl:space-x-reverse"
          >
            <img
              src="https://flowbite.com/docs/images/logo.svg"
              class="h-8"
              alt="Flowbite Logo"
            />
            <span
              class="self-center text-2xl font-semibold whitespace-nowrap dark:text-white"
              >Flowbite</span
            >
          </a>
          <button
            data-collapse-toggle="navbar-default"
            type="button"
            class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600"
            aria-controls="navbar-default"
            aria-expanded="false"
          >
            <span class="sr-only">Open main menu</span>
            <svg
              class="w-5 h-5"
              aria-hidden="true"
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 17 14"
            >
              <path
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M1 1h15M1 7h15M1 13h15"></path>
            </svg>
          </button>
          <div class="hidden w-full md:block md:w-auto" id="navbar-default">
            <ul
              class="font-medium flex flex-col p-4 md:p-0 mt-4 border border-gray-100 rounded-lg bg-gray-50 md:flex-row md:space-x-8 rtl:space-x-reverse md:mt-0 md:border-0 md:bg-white dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700"
            >
              <li>
                <a
                  href="/"
                  class="block py-2 px-3 text-white bg-blue-700 rounded md:bg-transparent md:text-blue-700 md:p-0 dark:text-white md:dark:text-blue-500"
                  aria-current="page">Home</a
                >
              </li>
              <li>
                <a
                  href="/about"
                  class="block py-2 px-3 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent"
                  >About</a
                >
              </li>
              <li>
                <a
                  href="#"
                  class="block py-2 px-3 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent"
                  >Services</a
                >
              </li>
              <li>
                <a
                  href="#"
                  class="block py-2 px-3 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent"
                  >Pricing</a
                >
              </li>
              <li>
                <a
                  href="#"
                  class="block py-2 px-3 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent"
                  >Contact</a
                >
              </li>
            </ul>
          </div>
        </div>
      </nav>
      <slot />
    </main>
  </body>
</html>




////////////////////////////////////////////
////////////////////////////////////////////

En Astro podemos 

Modos de renderizado
una es con una prer renderización en el momento de la construcción o en el bu
Time y la otra es renderizado bajo demanda por el servidor Qué significan estas opciones esto significa lo
siguiente por ejemplo imagínate en nuestro caso que tenemos un blog que hace una petición a una base de datos
para sacar el contenido y mostrarlo en la página o un post por cada uno de los
post que tengo en la base de datos Entonces qué va a pasar si utilizamos el
método por defecto que utiliza Astro para la renderización que es el método
de prer rendered o o static esto lo que hace que en el momento cuando compilamos
ya cuando construimos nuestra aplicación para subirla a un Hosting para ya Alo jarla en internet lo que va a hacer es
que va a compilar todas las páginas necesarias es decir lo que haría sería
en el momento de la compilación cuando se está ya compilando la aplicación
haría la petición a la base de datos para conseguir todos los post y ya generaría la página con contenido
estático de todos los posts que tenía en ese momento Qué ventaja tiene esto que la página ya está generada con los posts
Entonces cuando subamos nuestra página de internet y un usuario acceda no tenemos que esperar a que se haga esa
petición a la base de datos para obtener la información de los post dado que la página cuando se hizo el proceso de
compilación ya se encargó de traer todos los posts que había y crear la página
con esa información Entonces cuando el usuario acceda la información está lista al instante por eso es tan rápido porque
no tiene que ir al servidor ya la página ya está generada con la información es
instantáneo Entonces esto tiene una Clara ventaja que es la velocidad y tiene otra desventaja Cuál
es la desventaja que como el contenido Ya está renderizado si nosotros creamos
en nuestra base de datos un nuevo post el usuario no lo va a ver porque los usor el contenido que está viendo es el
que había en el momento del compilado de la aplicación eso es una desventaja y la
otra desventaja es que no podríamos por ejemplo Mostrar distinto contenido en
función a información de la petición por ejemplo imagina que yo quiero mostrar
una página distinta en función de si la persona haciendo la petición está en España o en Estados Unidos eso no lo
podría hacer ya que la página está prender no puede acceder a la información de la
petición y aquí te dice as en su documentación dice el método estático es
el mejor que hay para sitios que tien mucho contenido Que se actualiza de
forma poco frecuente y que muestra el mismo contenido a todos Los visitantes
ent si tu aplicación cumple con alguno de estos requisitos o con estos requisitos en general que se actualiza
lo que es el contenido en sí se actualiza de forma poco frecuente y
además muestra el mismo contenido a todos Los visitantes de la página pues
esta es la mejor opción para ti porque vas a ganar mucha velocidad y después tienes otras dos opciones tienes la de
server que es para aplicaciones web que necesitan o que tienen un contenido
altamente Dinámico que tiene que actualizarse al momento y esto pues lo
que haría sería el proceso clásico un usuario hace una petición Y entonces esa
petición si la página necesita hacer la petición a la base de datos Pues habría que esperar a que se haga esa petición y
se construya la página en función a esos datos Y también tendremos la ventaja de poder acceder a la información de la
petición ya que la página se está construyendo en el servidor por cada petición Cuál sería la desventaja de
este método pues que no sería tan Rápido como el otro ya que tenemos que pasar por ese proceso de hacer la petición a
la base de datos traernos los datos y generar la página en función a eso Entonces utilizar uno u otro pues
depende de de lo que tú necesites Ya te lo he dicho Astro si tienes un si tienes
una aplicación que necesita actualizarse constantemente que los datos estén siempre actualizados pues lo mejor para
ti va a ser utilizar el el método de renderización del servidor sin embargo si tus datos no se
tiene que actualizar de forma muy frecuente pues entonces va a ser más mejor utilizar el pre rendered que va a
ser mucho más rápido Y por último tenemos la opción híbrida que es para
sitios webs que tiene su mayoría de págin estática es decir que no necesitan
actualizarse de forma frecuente Pero hay algunas concretas que sí necesitan actualizarse de forma de forma frecuente
entonces tendríamos una mezcla de las dos entonces Cómo cambio todos estos ajustes pues si yo voy aquí a la
configuración de Astro solo tendría que Añadir una opción llamada
output y output como vemos dice hybrid server y static static es el que hemos
dicho que es el más rápido pero que el contenido no se actualiza de forma inmediata y el server no es tan rápido
pero siempre tenemos el último contenido disponible entonces que yo quiero server selecciono server que yo quiero static
Pues selecciono static que yo quiero híbrido pues le pondría híbrido Entonces
ya por cada página tendría que especificarlo entonces que est esta página en concreto quiero yo que sea
prer renderizada que es la opción más rápida Pues mira como en esta página como no necesito yo contenido que se
vaya actualizando porque siempre es el mismo contenido pues para ello tendría que exportar una constante llamarle pre
render estamos viendo aquí PR render y ponerlo en tru de esta forma esta página
se PR renderizar ira en el momento del compilado Sería más rápido y si al
contrario lo que quisiera Es que esto se compilara en el servidor
por cada petición pues esto en vez de true lo pondría en falso y si quiero que la mayoría de mis
páginas tengan uno y yo simplemente cambiar la que yo quiera que sea diferente pues únicamente aquí en vez de
híbrido imagina que la mayoría de mis páginas van a ser estáticas pero hay algunas que necesitan que sea en el
servidor en vez de estática entonces simplemente a la página que yo quiera por ejemplo a esta le diy PR render
falso y ya siempre que no le indique nada va a estar pre render va a ser
static que es el que tenemos aquí y siempre que le indiquen lo contrario como en este caso pues
entonces se va a renderizar el servidor no de forma estática Así que ya te digo Eso ya depende de las necesidades que tú
tengas en nuestro caso lo vamos a dejar en estático que hay realmente como es la
opción por defecto No necesitamos ni indicarla Y esa sería la opción por
defecto para todas las páginas vale Y ahora querría que cuando yo haga un clic



////////////////////////////////////////////
////////////////////////////////////////////

Páginas dinámicas
en mis tarjetas me llevase como una página donde se muestre el contenido del post entero
y para ello Yo quiero tener una especie de ruta que sea algo como barra post
barra y el post en concreto por ejemplo el que tenga
id1 Entonces cuando quiero tener rutas de varios niveles que no es por ejemplo como la de about que es simplemente un
nivel sino que necesito tener dos dos niveles por ejemplo post barra y otro nivel entonces ahí tengo que utilizar
carpetas aquí creo una carpeta con el nombre del nivel por ejemplo
posts y ahora aquí pues si si este ya es el último nivel pues entonces sí lo hago
a través de un archivo si hay más niveles de por medio pues sigo creando carpetas dentro pero claro fíjate que yo
no puedo crear las páginas de forma estática Por qué primero porque si tengo
40 post tendría que crear 40 páginas eso no tiene mucho sentido verdad y lo segundo es que realmente el número de
post que tengo va a ir cambiando Entonces eso también me me imposibilita
que yo cree aquí las páginas de forma estática creando la página y ya está primero eso porque tendría que crear 40
50 60 páginas o lo que sea y después porque Qué pasaría cuando elimine o cree un post y habría por ahí páginas que
sobran o que faltan Entonces en este caso lo que necesitamos se conoce como ruta
dinámicas para poner una ruta dinámica vamos a crearla y vamos a ponerle un
identificador al sector o al segmento que va a ser Dinámico en este caso como
quiero identificar cada post por un ID le voy a poner de nombre ID vale este va a ser el segmento que voy a utilizar
para identificarlo y ahora le pongo su extensión punto
Astro y ahora aquí lo que puedo hacer por ejemplo es importar mi layout que es
el que vamos a utilizar en todas las páginas vamos a importar le habíamos
llamado default layout le voy a poner default
layout y aquí dentro voy a mostrar por ejemplo estás en la página
un si intentamos acceder a esa ruta post un por ejemplo nos va a dar un error que
va a decir get static pad function required para ruta dinámica esto Qué significa significa que cuando
utilizamos el modo de renderización en estático sabemos que todas las páginas
se generan en el momento del compilado entonces para que en el
compilado pueda saber cuántas página tiene que generar necesitamos utilizar
una función esto no pasa si utilizamos el modelo de renderizado en el servidor
porque entonces únicamente recibiríamos ese número ese ID del post
y haríamos una petición a la base de datos y traíamos el contenido pero como el contenido se va a generar durante el
compilado y cuando el usuario aceda ya va a estar listo pues Astro tiene que saber cuántas páginas tiene que generar
en este caso tiene que generar una por cada post pues tenemos que decirle Cuántos post tenemos y Cuál es la
información de cada uno de ellos que tiene que Mostrar así que bueno nos queda claro lo que necesitamos tenemos
que exportar una función que la vamos a hacer asíncrona para poder utilizar a we dentro y la vamos a llamar get static
pads lo primero que para saber cuántos post tenemos tenemos que hacer una
petición a nuestra base de datos Entonces como esto ya lo hacíamos en la página principal voy a reutilizar el
código que hacíamos para traer los distintos post Y ahora cuál es la
sintaxis que tiene que tener esta función Pues aquí nos dice que por cada uno vale por cada uno de nuestros
elementos en este caso por cada uno de nuestros post dentro de una aray tenemos que devolver un objeto con la propiedad
params y el nombre de la propiedad que utilizamos para identificarlo que es el nombre que le hemos puesto a este
segmento Dinámico el ID entonces sabemos que tenemos que devolver un objeto por
cada uno de mis post Así que lo que voy a hacer es un map voy a recibir los post
y por cada uno de ellos voy a devolver un objeto que ponga para
y tenga una propiedad que en este caso es ID que va a equivaler al ID del post
y ahora este array que se genera con el map es el que tengo que devolver de mi
función y ahora vamos a ver que va a funcionar dice estás en la página uno lo que pasa que si yo accedo a la página
dos también voy a decir esta es la página un porque es algo que yo he escrito de forma estática lo que podemos
acceder lo que podemos hacer es acceder a ese parámetro que me están mandando en este caso
Sid para ello voy a hacer un destructuring del objeto de Astro params
y aquí voy a sacar el ID es lo que estoy utilizando y lo que le estoy pasando a la función de get static pads y ahora
voy a hacer esta en la página
ID esto Perdón lo tenemos que sacar fuera de la función aquí para que podamos
acceder y ahora sí como vemos l vamos a la do dice a la dos si vamos a la uno dice estamos en la página uno y ahora
como tenemos acceso al post que me están mandando puedo hacer una petición para
obtener la información de ese poste en concreto por ejemplo podemos hacer lo
siguiente vamos a poner post response vamos a hacer una petición de
red y en vez de a todos los post vamos a
indicar A qué post quiero hacerlo que en este caso es al que tiene este ID de
aquí y ahora de nuevo haríamos el post sería el post
response convertido a Jason y ahora tengo acceso a este post
en concreto y podría decir está en la página ID del post y acceder a la
información por ejemplo del post title Y fíjate dice estarse la página uno del
post de benefits of mindfulness meditation si yo vo al dos pues se va a mostrar el título del dos si yo vo al
tres se va a mostrar el título del tres y yo puedo ya aquí crear la página del post y ya lo único que nos faltaría
sería actualizar nuestro componente de post para que tenga un enlace que al
hacer clic me lleve a la página de ese post y para ello vamos a ir al componente de post y lo vamos a envolver
todo dentro de un enlace voy a cortar todo esto lo voy a
poner dentro de una etiqueta de enlace Y a dónde te va a llevar este enlace primero voy a sacar de los props el ID y
ahora el href esto como le necesitamos pasar variable les necesito pasar las llaves
para decir que vamos a poner el código javascript y la ruta va a ser barra post
barra y el ID del post en concreto y ya de esta manera pues si yo hago clic aquí
como vemos dice que estás en en el post exploring The Wall of astrophysics y así y así lo mismo ahora lo que yo quiero
mostrar evidentemente Pues sería contenido con su imagen su título todo
eso y voy reutilizar gran parte de lo que ya estoy utilizando aquí en mi en mi
post voy a reutilizar gran parte de este contenido Solo que le voy a hacer un par
de modificaciones vale vamos a pegar esto por aquí y lo vamos a meter
dentro de un di por ejemplo vale Y ahora voy a hacer un
destructuring de las propiedades para no tener que hacer post pun title post pun description y todo eso entonces aquí
podría hacer directamente title
description También estamos utilizando el content y por aquí teníamos también el
created Entonces ya accedemos si tenemos estos estilo evidentemente Esto no es lo que queremos que se vea así porque ahora
queremos que se vea todo completo así que vamos a hacer unas modificaciones en los estilos primero que nada le voy a
quitar este fondo voy a poner el texto en
negro y le voy a quitar Ya esta clase con este color a los
párrafos no solo eso sino que además aquí no me interesa ni Mostrar la fecha ni nada de eso porque eso ya se ve fuera
entonces me voy a quedar Únicamente con la imagen la descripción y el contenido
y el contenido no lo vamos a cortar vamos a mostrar el contenido completo vale est se va apareciendo un poco más a
lo que queremos nos faltaría únicamente cambiar el tamaño máximo le podemos poner como
4xl esto ya tiene más sentido y podemos centrarlo dándole un margin a
los lados de auto vale Y esto ya pues evidentemente se ve mejor Entonces ya podemos acceder a cada
uno de los post y ver Su contenido completo as que hemos aprendido mucho en esta clase hemos aprendido a hacer rutas
dinámicas y Cómo conseguir la información para que se puedan genererar todas estas páginas en el caso de que no
hubiésemos utilizado en el caso de que esta página se render en el servidor pues ya no
necesitaríamos esta función de get St p vale la podríamos quitar ahora
evidentemente Esto me va a dar error pero si yo esto lo
cambio y pongo el prender PR render se
lo pongo en falso y puedo cambiar la configuración y ponerlo por ejemplo en
híbrido Y fíjate que esto ya carga perfectamente sin necesitar dado que le
hemos dicho que lo va a renderizar en el servidor ya no necesita la función de
get static paths pero en el caso de que esto sí fuera prerender pues entonces vemos que ya
falla porque ya sí necesita la función de get static pads para funcionar Y es
pues lo comentado porque cuando lo generamos en el momento de la compilación tenemos que hacerle saber
todos los post que tenemos para que pueda generar todas las posibles páginas vale porque recuerda que todas las
páginas las va a generar en el instante que se compila y las va a subir todas Entonces cuando el usuario accede ya
están todas compiladas y para ello tiene que saber por Cuántas tenemos Y por qué
las vamos a identificar en este caso por un ID hemos visto que en el caso de que la renderización sea del lado del
servidor esto no sería necesario otro de los puntos clave de Astro es que es
Markdown
capaz de generar una página a través de un archivo de Mark markdown si nunca lo habéis visto si no
lo conocéis es unicamente un lenguaje muy sencillito que tiene ciertos
elementos que nos permiten crear contenido algo formateado es decir poner
título poner párrafos poner tablas poner imágenes sin utilizar html con una
sintaxis muy sencilla y es muy utilizado en blogs entonces fíjate os podéis venir a esta página stackedit.io o las otras
miles que que son Editores markdown si tú buscas editor markdown te van a salir estas y muchas más Y fíjate que la
sintaxis que utiliza markdown puese ser por ejemplo una almohadilla para crear un título principal un h1 dos
almohadillas para crear un subtítulo un h2 los párrafos pues irían así tal
cual Vale entonces este tipo de sintaxis muy utilizada en los blogs Y fíjate como
definen también las tablas con esta sintaxis aquí te viene de cómo hacer distintos tipos de cosas congr vamos a
copiar todo esto y vamos a ver qué pasa si yo creo aquí una página que digo en
page le voy Llamar ejemplo pun md que la sintaxis de markdown y lo voy a copiar
todo Fíjate que si yo voy a la ruta ejemplo es capaz de renderizar todo ese
contenido vale evidentemente uno tiene su forma de renderizar lo no
va a ser igual que como lo renderiza está edit que ya le pone unos estilos en concreto pero lo que tú tienes es ya los
elementos ves esto es un h1 esto es un párrafo vas a tener también los h2 que
tú hayas que hayas puesto markdown con la doble almohadilla y tú ya esto puedes estilizarlo como tú quieras con css con
tywin o lo que sea entonces eso también una de las características más destacadas que tiene que tiene Astro y
quería enseñároslo vale es capacidad de renderizar archivo markdown directamente creándolo dentro del directorio de
páginas ahora vamos a ver lo que os comenté al principio que Astro puede ser utilizado con cualquier framework de
Islas
componentes que tú ya conozcas vale como react PR View solid alpin muchos vale me
parece que angular por ejemplo no está porque angular es un poco más especialito pero aquí tienen mucho
entonces Si no te gusta la forma de crear componentes de y tú quieres utilizar real tú quieres utilizar View
porque ya está acostumbrado a ello y por las ventajas que te puedan ofrecer pues
simplemente en una nueva terminal tendríamos que ejecutar npx Astro ad
igual que hemos hecho conta el Win pero en este caso voy a decir que quiero Añadir
react y esto empezar a instalar todo lo necesario vo a decir que sí que instal
las dependencia es decir que sí modifique el archivo de configuración Sí todo vale
entonces ahora es tan fácil cóm crear un nuevo componente y como si estuviésemos
utilizando re pued crear un componente por ejemplo llamado
botón y le voy a poner extensión jsx que es la extensión de
react y ya sabemos la síntesis de react para crear un un componente damos una
función con el nombre del componente y la función devolvía el
elemento y esto lo podemos importar en cualquier página por ejemplo en la
página de abot yo puedo importar el componente
Button y renderizar lo como un componente normal y lo puedo mezclar yo
con componentes de View de incluso puedo tener componentes de View componentes de react y componentes de Astro en el mismo
proyecto sin problema y ahora si voy a la página de abot ves tengo aquí el botón que dice Hola Hazme click vamos a
añadirle interactividad a esto vamos a poner un on click y le vamos a pasar una
función que diga Hazme o Gracias por dar
click vamos a ver qué pasa ahora vamos a recargar le a dar Hazme
click Hazme clic y en la consola no está pasando nada vamos a probar hacer una
alerta que diga gracias a ver si la alerta funciona A ver por qué está
pasando esto nada la alerta tampoco funciona y eso porque asro por defecto
no añade interactividad a los componentes Para qué para no tener que enviar javascript innecesario al
navegador dado que el javascript que manda pues es algo que ralentiza bastante una web Entonces lo mejor es
mandar el mínimo javascrip necesario así que por defecto no manda nada pero claro
perdemos la interactividad si yo necesito que mi componente sea interactivo hay una manera de
solucionarlo y es pasándole esta opción de aquí de client al componente Pero hay
distintos modos los cual pue cargar el javascript por ejemplo client visible
que cuando el componente entra en el viewport es decir cuando está visible solamente se va a volver interactivo
cuando entra en la página es decir mientras no esté visible no tiene por qué cargar el javascript si ponemos load
Pues cuando carga la página Aunque el elemento no se vea ya lo va a cargar el cl invisible es una buena opción porque
para qué quiero que tenga interactividad mientras el componente no se vea por lo tanto no van poder interactuar con él
así que voy a ir a vot y a mi componente le voy a decir esto que dice aquí
client y le voy a pasar visible y Esto va a hacer que cuando le
haga clic va a decir gracias Ya va a funcionar la alerta y Fíjate que cuando vamos al menú que os decía al principio
que te muestra si tienes islas de Astro ya nos aparece este cliente como una isla Entonces ya hemos visto lo que es
una isla que es una isla dentro del astro para que te lo dice es cualquier componente de nuestra página que tenga
interactividad Entonces el html es componente se renderiza en el servidor y después su
lógica su javascript se carga cuando nosotros le digamos con la directiva client Pues eso simplemente es una isla
dentro de Astro es un componente que tiene interactividad ahora vamos a ver
ViewTransitions
algo que me parece a mí increíble de Astro la verdad que se llama View transition transición entrevista Fíjate
que si yo voy al código de mi layout y actualizo el enlace que me lleva al Home
que lo tengo por aquí home le pongo que me lleve a la raíz de mi aplicación para
ahora poder Navegar entre AB y home fíjate aquí arriba que esto causa que el
navegador recargue la página V lo recarga entre cambio de
páginas una opción que no emite Astro que nos da la posibilidad de dos cosas
que están bastante bien una de de que haga el efecto de las típicas single
paace application aplicaciones de una sola página que cuando cambiamos entre página y página nos refresca vale No
refresca la página y lo segundo nos añade una transición bastante Guay
bastante suave entre una página y otra lo Vais a ver aquí la documentación de
la piedra te dice que Oye importa esto si lo
quieres utilizar en todas las páginas pues entonces pong en el layout y todas las páginas que utilicen el layout van a
tener este efecto así que dentro de la parte que es de código
javascript recordamos que va entre esta estos guiones importamos el componente
vi transition y aquí al final delad al final del slot vi transition
ponemos el componente tiene que quedar aquí vale al final del Head no ponerlo dentro del slot ponerlo ya fuera y esto
qué va a causar Pues fíjate el efecto cuando yo cambie de página ves que efecto más suave cuando es como que se
va un contenido y aparece otro de forma suave y además aquí arriba podes Ver que
esto no recarga la página así que bueno con esto ya finalizamos es todo lo que
os quería enseñar sobre Astro evidentemente hay más cosas pero yo creo que con esto habéis podido ver la
esencia de Astro no al menos suficiente para saber si os convence o no Si lo
utilizáis o no por último deciros que he creado tanto un grupo de Facebook como un grupo de discord El de discord De
hecho no lo creo todavía lo voy a crear justo cuando termine esta clase para que podamos hacer un poco de comunidad sobre
el desarrollo web en español entonces seas del país que seas si eres de habla
hispana y te gusta el desarrollo web Entonces te recomienda que te que te unas a los grupos que te voy a dejar en
la descripción así que bueno si queréis ver algo más de astr si tenéis cualquier duda lo dejáis por los comentarios
Español (generados automáticamente)




////////////////////////////////////////////
////////////////////////////////////////////


Para configurar pagina principal con forma diferente;

import { defineConfig } from 'astro/config';

import tailwind from "@astrojs/tailwind";

// https://astro.build/config
export default defineConfig({
  output:'hybrid',
  // output:'server', // para subir informacion a diario menos rapido
  // output:'static',//mas rapido pero no actualiza informacion base de datos
  integrations: [tailwind()]
});


////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
////////////////////////////////////////////





////////////////////////////////////////////
